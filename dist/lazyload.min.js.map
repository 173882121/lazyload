{"version":3,"sources":["lazyload.js"],"names":["global","factory","exports","_typeof","module","define","amd","LazyLoad","this","purgeElements","elements","getWasProcessed","element","revealElement","settings","force","callCallback","isIntersecting","callback_enter","managedTags","entry","intersectionRatio","addOneShotListeners","addClass","class_loading","setSources","root","rootMargin","getInstanceSettings","customSettings","defaultSettings","elements_selector","container","threshold","document","data_src","data_srcset","data_sizes","class_loaded","class_error","load_delay","callback_load","callback_error","to_webp","processedDataName","attribute","processedDataValue","setData","getAttribute","dataPrefix","setAttribute","value","setWasProcessed","getData","createInstance","classObj","options","event","instance","CustomEvent","detail","eventString","window","dispatchEvent","replaceExtToWebp","condition","i","optionsItem","runningOnBrowser","isBot","test","navigator","userAgent","supportsIntersectionObserver","supportsClassList","createElement","canvas","indexOf","parentTag","attrName","dataAttrName","toWebpFlag","tagName","childTag","children","attrValue","setAttributeIfValue","setSourcesImg","parent","parentNode","backgroundImage","supportsWebp","srcDataValue","setSourcesFunctions","IMG","IFRAME","setSourcesIframe","setValue","setSourcesInChildren","sizesDataValue","setSourcesVideo","srcDataName","VIDEO","setSourcesBgImage","setSourcesFunction","className","removeClass","add","remove","callback","argument","replace","errorString","removeListeners","removeEventListener","loadHandler","errorHandler","onError","onEvent","loadString","addEventListener","onLoad","success","target","_settings","getObserverSettings","prototype","unobserve","_delayLoad","update","console","load","_observer","_loadObserved","loadDelay","_this","setTimeout","_manageIntersection","log","_setObserver","_onIntersection","entries","loadAll","bind","_elements","IntersectionObserver","nodeSet","forEach","_this2","_this3","querySelectorAll","Array","slice","call","observe","destroy","_this4","length","autoInitialize","lazyLoadOptions"],"mappings":"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","file":"lazyload.min.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.LazyLoad = factory());\n}(this, (function () { 'use strict';\n\nvar getInstanceSettings = customSettings => {\r\n\tconst defaultSettings = {\r\n\t\telements_selector: \"img\",\r\n\t\tcontainer: document,\r\n\t\tthreshold: 300,\r\n\t\tdata_src: \"src\",\r\n\t\tdata_srcset: \"srcset\",\r\n\t\tdata_sizes: \"sizes\",\r\n\t\tclass_loading: \"loading\",\r\n\t\tclass_loaded: \"loaded\",\r\n\t\tclass_error: \"error\",\r\n\t\tload_delay: 0,\r\n\t\tcallback_load: null,\r\n\t\tcallback_error: null,\r\n\t\tcallback_set: null,\r\n\t\tcallback_enter: null,\r\n\t\tto_webp: false\r\n\t};\r\n\r\n\treturn Object.assign({}, defaultSettings, customSettings);\r\n};\n\nconst dataPrefix = \"data-\";\r\nconst processedDataName = \"was-processed\";\r\nconst processedDataValue = \"true\";\r\n\r\nconst getData = (element, attribute) => {\r\n\treturn element.getAttribute(dataPrefix + attribute);\r\n};\r\n\r\nconst setData = (element, attribute, value) => {\r\n\treturn element.setAttribute(dataPrefix + attribute, value);\r\n};\r\n\r\nconst setWasProcessed = element =>\r\n\tsetData(element, processedDataName, processedDataValue);\r\n\r\nconst getWasProcessed = element =>\r\n\tgetData(element, processedDataName) === processedDataValue;\n\nfunction purgeElements(elements) {\r\n\treturn elements.filter(element => !getWasProcessed(element));\r\n}\n\n/* Creates instance and notifies it through the window element */\r\nconst createInstance = function(classObj, options) {\r\n\tvar event;\r\n\tlet eventString = \"LazyLoad::Initialized\";\r\n\tlet instance = new classObj(options);\r\n\ttry {\r\n\t\t// Works in modern browsers\r\n\t\tevent = new CustomEvent(eventString, { detail: { instance } });\r\n\t} catch (err) {\r\n\t\t// Works in Internet Explorer (all versions)\r\n\t\tevent = document.createEvent(\"CustomEvent\");\r\n\t\tevent.initCustomEvent(eventString, false, false, { instance });\r\n\t}\r\n\twindow.dispatchEvent(event);\r\n};\r\n\r\n/* Auto initialization of one or more instances of lazyload, depending on the \r\n    options passed in (plain object or an array) */\r\nfunction autoInitialize(classObj, options) {\r\n\tif (!options) {\r\n\t\treturn;\r\n\t}\r\n\tif (!options.length) {\r\n\t\t// Plain object\r\n\t\tcreateInstance(classObj, options);\r\n\t} else {\r\n\t\t// Array of objects\r\n\t\tfor (let i = 0, optionsItem; (optionsItem = options[i]); i += 1) {\r\n\t\t\tcreateInstance(classObj, optionsItem);\r\n\t\t}\r\n\t}\r\n}\n\nconst replaceExtToWebp = (value, condition) =>\n\tcondition ? value.replace(/\\.(jpe?g|png)/gi, \".webp\") : value;\n\nconst detectWebp = () => {\n\tvar webpString = \"image/webp\";\n\tvar canvas = document.createElement(\"canvas\");\n\n\tif (canvas.getContext && canvas.getContext(\"2d\")) {\n\t\treturn canvas.toDataURL(webpString).indexOf(`data:${webpString}`) === 0;\n\t}\n\n\treturn false;\n};\n\nconst runningOnBrowser = typeof window !== \"undefined\";\r\n\r\nconst isBot =\r\n\t(runningOnBrowser && !(\"onscroll\" in window)) ||\r\n\t/(gle|ing|ro)bot|crawl|spider/i.test(navigator.userAgent);\r\n\r\nconst supportsIntersectionObserver =\r\n\trunningOnBrowser && \"IntersectionObserver\" in window;\r\n\r\nconst supportsClassList =\r\n\trunningOnBrowser && \"classList\" in document.createElement(\"p\");\r\n\r\nconst supportsWebp = runningOnBrowser && detectWebp();\n\nconst setSourcesInChildren = function(\r\n\tparentTag,\r\n\tattrName,\r\n\tdataAttrName,\r\n\ttoWebpFlag\r\n) {\r\n\tfor (let i = 0, childTag; (childTag = parentTag.children[i]); i += 1) {\r\n\t\tif (childTag.tagName === \"SOURCE\") {\r\n\t\t\tlet attrValue = getData(childTag, dataAttrName);\r\n\t\t\tsetAttributeIfValue(childTag, attrName, attrValue, toWebpFlag);\r\n\t\t}\r\n\t}\r\n};\r\n\r\nconst setAttributeIfValue = function(\r\n\telement,\r\n\tattrName,\r\n\tvalue,\r\n\ttoWebpFlag\r\n) {\r\n\tif (!value) {\r\n\t\treturn;\r\n\t}\r\n\telement.setAttribute(attrName, replaceExtToWebp(value, toWebpFlag));\r\n};\r\n\r\nconst setSourcesImg = (element, settings) => {\r\n\tconst toWebpFlag = supportsWebp && settings.to_webp;\r\n\tconst srcsetDataName = settings.data_srcset;\r\n\tconst parent = element.parentNode;\r\n\r\n\tif (parent && parent.tagName === \"PICTURE\") {\r\n\t\tsetSourcesInChildren(parent, \"srcset\", srcsetDataName, toWebpFlag);\r\n\t}\r\n\tconst sizesDataValue = getData(element, settings.data_sizes);\r\n\tsetAttributeIfValue(element, \"sizes\", sizesDataValue);\r\n\tconst srcsetDataValue = getData(element, srcsetDataName);\r\n\tsetAttributeIfValue(element, \"srcset\", srcsetDataValue, toWebpFlag);\r\n\tconst srcDataValue = getData(element, settings.data_src);\r\n\tsetAttributeIfValue(element, \"src\", srcDataValue, toWebpFlag);\r\n};\r\n\r\nconst setSourcesIframe = (element, settings) => {\r\n\tconst srcDataValue = getData(element, settings.data_src);\r\n\r\n\tsetAttributeIfValue(element, \"src\", srcDataValue);\r\n};\r\n\r\nconst setSourcesVideo = (element, settings) => {\r\n\tconst srcDataName = settings.data_src;\r\n\tconst srcDataValue = getData(element, srcDataName);\r\n\r\n\tsetSourcesInChildren(element, \"src\", srcDataName);\r\n\tsetAttributeIfValue(element, \"src\", srcDataValue);\r\n};\r\n\r\nconst setSourcesBgImage = (element, settings) => {\r\n\tconst toWebpFlag = supportsWebp && settings.to_webp;\r\n\tconst srcDataValue = getData(element, settings.data_src);\r\n\r\n\tif (srcDataValue) {\r\n\t\tlet setValue = replaceExtToWebp(srcDataValue, toWebpFlag);\r\n\t\telement.style.backgroundImage = `url(\"${setValue}\")`;\r\n\t}\r\n};\r\n\r\nconst setSourcesFunctions = {\r\n\tIMG: setSourcesImg,\r\n\tIFRAME: setSourcesIframe,\r\n\tVIDEO: setSourcesVideo\r\n};\r\n\r\nconst setSources = (element, settings) => {\r\n\tconst tagName = element.tagName;\r\n\tconst setSourcesFunction = setSourcesFunctions[tagName];\r\n\tif (setSourcesFunction) {\r\n\t\tsetSourcesFunction(element, settings);\r\n\t\treturn;\r\n\t}\r\n\tsetSourcesBgImage(element, settings);\r\n};\n\nconst addClass = (element, className) => {\r\n\tif (supportsClassList) {\r\n\t\telement.classList.add(className);\r\n\t\treturn;\r\n\t}\r\n\telement.className += (element.className ? \" \" : \"\") + className;\r\n};\r\n\r\nconst removeClass = (element, className) => {\r\n\tif (supportsClassList) {\r\n\t\telement.classList.remove(className);\r\n\t\treturn;\r\n\t}\r\n\telement.className = element.className.\r\n\t\treplace(new RegExp(\"(^|\\\\s+)\" + className + \"(\\\\s+|$)\"), \" \").\r\n\t\treplace(/^\\s+/, \"\").\r\n\t\treplace(/\\s+$/, \"\");\r\n};\n\nconst managedTags = [\"IMG\", \"IFRAME\", \"VIDEO\"];\r\n\r\nconst callCallback = function(callback, argument) {\r\n\tif (callback) {\r\n\t\tcallback(argument);\r\n\t}\r\n};\r\n\r\nconst loadString = \"load\";\r\nconst errorString = \"error\";\r\n\r\nconst removeListeners = function(element, loadHandler, errorHandler) {\r\n\telement.removeEventListener(loadString, loadHandler);\r\n\telement.removeEventListener(errorString, errorHandler);\r\n};\r\n\r\nconst addOneShotListeners = function(element, settings) {\r\n\tconst onLoad = event => {\r\n\t\tonEvent(event, true, settings);\r\n\t\tremoveListeners(element, onLoad, onError);\r\n\t};\r\n\tconst onError = event => {\r\n\t\tonEvent(event, false, settings);\r\n\t\tremoveListeners(element, onLoad, onError);\r\n\t};\r\n\telement.addEventListener(loadString, onLoad);\r\n\telement.addEventListener(errorString, onError);\r\n};\r\n\r\nconst onEvent = function(event, success, settings) {\r\n\tconst element = event.target;\r\n\tremoveClass(element, settings.class_loading);\r\n\taddClass(element, success ? settings.class_loaded : settings.class_error); // Setting loaded or error class\r\n\tcallCallback(\r\n\t\tsuccess ? settings.callback_load : settings.callback_error,\r\n\t\telement\r\n\t);\r\n};\r\n\r\nfunction revealElement(element, settings, force) {\r\n\tif (!force && getWasProcessed(element)) {\r\n\t\treturn; // element has already been processed and force wasn't true\r\n\t}\r\n\tcallCallback(settings.callback_enter, element);\r\n\tif (managedTags.indexOf(element.tagName) > -1) {\r\n\t\taddOneShotListeners(element, settings);\r\n\t\taddClass(element, settings.class_loading);\r\n\t}\r\n\tsetSources(element, settings);\r\n\tsetWasProcessed(element);\r\n\tcallCallback(settings.callback_set, element);\r\n}\n\n/* entry.isIntersecting needs fallback because is null on some versions of MS Edge, and\r\n   entry.intersectionRatio is not enough alone because it could be 0 on some intersecting elements */\r\nconst isIntersecting = entry =>\r\n\tentry.isIntersecting || entry.intersectionRatio > 0;\r\n\r\nconst getObserverSettings = settings => ({\r\n\troot: settings.container === document ? null : settings.container,\r\n\trootMargin: settings.threshold + \"px\",\r\n\tthreshold: 0\r\n});\n\nconst LazyLoad = function(customSettings, elements) {\r\n\tthis._settings = getInstanceSettings(customSettings);\r\n\tthis._setObserver();\r\n\tthis.update(elements);\r\n};\r\n\r\nLazyLoad.prototype = {\r\n\t_loadObserved: function(element) {\r\n\t\tthis.load(element);\r\n\t\tthis._observer.unobserve(element);\r\n\t},\r\n\t_delayLoad: function(element, loadDelay) {\r\n\t\tsetTimeout(() => {\r\n\t\t\t// Do something that checks if it's still inside, THEN\r\n\t\t\tconsole.log(\r\n\t\t\t\t\"data-in-viewport at timeout? \",\r\n\t\t\t\telement.getAttribute(\"data-in-viewport\")\r\n\t\t\t);\r\n\t\t\tif (element.getAttribute(\"data-in-viewport\") === \"true\") {\r\n\t\t\t\tthis._loadObserved(element);\r\n\t\t\t}\r\n\t\t}, loadDelay);\r\n\t},\r\n\t_manageIntersection: function(entry) {\r\n\t\tvar loadDelay = this._settings.load_delay;\r\n\t\tif (isIntersecting(entry)) {\r\n\t\t\tlet element = entry.target;\r\n\t\t\tif (loadDelay === 0) {\r\n\t\t\t\tthis._loadObserved(element);\r\n\t\t\t} else {\r\n\t\t\t\tthis._delayLoad(element, loadDelay);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Writes in and outs in a data-attribute\r\n\t\tif (isIntersecting(entry)) {\r\n\t\t\tconsole.log(\"Intersecting, write data-in-viewport: true\");\r\n\t\t\tentry.target.setAttribute(\"data-in-viewport\", true);\r\n\t\t} else {\r\n\t\t\tconsole.log(\"No intersecting, write data-in-viewport: false\");\r\n\t\t\tentry.target.setAttribute(\"data-in-viewport\", false);\r\n\t\t}\r\n\t},\r\n\t_onIntersection: function(entries) {\r\n\t\tentries.forEach(this._manageIntersection.bind(this));\r\n\t\tthis._elements = purgeElements(this._elements);\r\n\t},\r\n\t_setObserver: function() {\r\n\t\tif (!supportsIntersectionObserver) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._observer = new IntersectionObserver(\r\n\t\t\tthis._onIntersection.bind(this),\r\n\t\t\tgetObserverSettings(this._settings)\r\n\t\t);\r\n\t},\r\n\r\n\tloadAll: function() {\r\n\t\tthis._elements.forEach(element => {\r\n\t\t\tthis.load(element);\r\n\t\t});\r\n\t\tthis._elements = purgeElements(this._elements);\r\n\t},\r\n\r\n\tupdate: function(elements) {\r\n\t\tconst settings = this._settings;\r\n\t\tconst nodeSet =\r\n\t\t\telements ||\r\n\t\t\tsettings.container.querySelectorAll(settings.elements_selector);\r\n\r\n\t\tthis._elements = purgeElements(Array.prototype.slice.call(nodeSet)); // nodeset to array for IE compatibility\r\n\r\n\t\tif (isBot || !this._observer) {\r\n\t\t\tthis.loadAll();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._elements.forEach(element => {\r\n\t\t\tthis._observer.observe(element);\r\n\t\t});\r\n\t},\r\n\r\n\tdestroy: function() {\r\n\t\tif (this._observer) {\r\n\t\t\tpurgeElements(this._elements).forEach(element => {\r\n\t\t\t\tthis._observer.unobserve(element);\r\n\t\t\t});\r\n\t\t\tthis._observer = null;\r\n\t\t}\r\n\t\tthis._elements = null;\r\n\t\tthis._settings = null;\r\n\t},\r\n\r\n\tload: function(element, force) {\r\n\t\trevealElement(element, this._settings, force);\r\n\t}\r\n};\r\n\r\n/* Automatic instances creation if required (useful for async script loading) */\r\nif (runningOnBrowser) {\r\n\tautoInitialize(LazyLoad, window.lazyLoadOptions);\r\n}\n\nreturn LazyLoad;\n\n})));\n"]}